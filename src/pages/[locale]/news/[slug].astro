---
import type { CollectionEntry } from 'astro:content';
import { getCollection, getEntry } from 'astro:content';

import PageHeading from '@/components/PageHeading.astro';
import PostInfoCard from '@/components/PostInfoCard.astro';
import type { Language } from '@/i18n';
import Layout from '@/layouts/Layout.astro';
import { parsePostSlug } from '@/utils/news';

export type ParsedPost = CollectionEntry<'news'> & {
  data: {
    datePublished: Date;
    language: Language;
    url: string;
  };
};

type Props = {
  post: ParsedPost;
};

export const getStaticPaths = async () => {
  const posts = await getCollection('news');
  const paths = posts.map((post) => {
    const { datePublished, language, name, url } = parsePostSlug(post.slug);
    return {
      params: {
        locale: language,
        slug: name
      },
      props: {
        post: {
          ...post,
          data: {
            ...post.data,
            datePublished,
            language,
            url
          }
        }
      }
    };
  });
  return paths;
};

const { post } = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();

const author = await getEntry(post.data.author);
---

<Layout description={post.data.description} title={post.data.title}>
  <article class="prose prose-gray relative mx-auto max-w-3xl pt-8 dark:prose-invert">
    <PageHeading class="pb-0 text-left">
      {post.data.title}
    </PageHeading>
    <PostInfoCard
      author={author}
      className="not-prose"
      datePublished={post.data.datePublished}
      readingTime={remarkPluginFrontmatter.readingTime}
    />
    <Content />
  </article>
</Layout>
