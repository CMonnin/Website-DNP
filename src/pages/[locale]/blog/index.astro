---
import { getCollection, getEntry } from 'astro:content';

import PageHeading from '@/components/PageHeading.astro';
import PostInfoCard from '@/components/PostInfoCard.astro';
import Layout from '@/layouts/Layout.astro';

import { useTranslations } from '@/i18n';

export const getStaticPaths = () => {
  return [{ params: { locale: 'en' } }, { params: { locale: 'fr' } }];
};

const { resolvedLanguage, t, translatePath } = useTranslations(Astro.url);

const posts = await getCollection('blog', ({ data }) => data.language === resolvedLanguage && !data.isDraft);
posts.sort((a, b) => {
  if (a.data.datePublished > b.data.datePublished) {
    return -1;
  } else if (b.data.datePublished > a.data.datePublished) {
    return 1;
  }
  return 0;
});
---

<Layout
  bilingual
  description={t({
    en: 'Explore the Douglas Neuroinformatics Platform blog for the latest updates on our offerings at the Douglas Research Centre.',
    fr: 'Explorez le blogue du Douglas Neuroinformatics Platform pour obtenir les dernières mises à jour sur les services offerts au Centre de recherche Douglas.'
  })}
  title="Douglas Neuroinformatics Platform - Blogue"
>
  <PageHeading>
    {
      t({
        en: 'Our Blog',
        fr: 'Notre blogue'
      })
    }
  </PageHeading>
  {
    (
      <ul class="grid gap-6 lg:grid-cols-2" id="blog-list">
        {posts.map(async (post) => {
          const author = await getEntry(post.data.author);
          const { remarkPluginFrontmatter } = await post.render();
          return (
            <li class="translate-y-6 opacity-0 transition-all duration-500 ease-in-out">
              <a
                class="block h-full w-full cursor-pointer rounded-md border border-gray-300 bg-gray-50 p-5 shadow-sm dark:border-gray-600 dark:bg-gray-800"
                href={translatePath(`/blog/${post.slug}`)}
              >
                <span
                  class:list={[
                    'inline-flex items-center rounded-full px-3 py-0.5 text-xs font-medium',
                    post.data.type === 'article' && 'bg-indigo-100 text-indigo-800',
                    post.data.type === 'caseStudy' && 'bg-green-100 text-green-800',
                    post.data.type === 'video' && 'bg-pink-100 text-pink-800'
                  ]}
                >
                  {post.data.type === 'article' && 'Article'}
                  {post.data.type === 'caseStudy' &&
                    t({
                      en: 'Case Study',
                      fr: 'Étude de cas'
                    })}
                  {post.data.type === 'video' &&
                    t({
                      en: 'Video',
                      fr: 'Vidéo'
                    })}
                </span>
                <div class="mt-3">
                  <p class="font-semibold tracking-tight md:text-lg">{post.data.title}</p>
                  <p class="mt-3 text-sm text-gray-700 dark:text-gray-300">{post.data.description}</p>
                </div>

                <PostInfoCard
                  author={author}
                  className="mt-6"
                  datePublished={post.data.datePublished}
                  readingTime={remarkPluginFrontmatter.readingTime}
                />
              </a>
            </li>
          );
        })}
      </ul>
    )
  }
</Layout>
<script>
  const ul = document.getElementById('blog-list')!;
  for (let i = 0; i < ul.children.length; i++) {
    const li = ul.children.item(i) as HTMLLIElement;
    setTimeout(() => {
      li.classList.replace('opacity-0', 'opacity-100');
      li.classList.replace('translate-y-6', 'translate-y-0');
    }, i * 100);
  }
</script>
